import pandas as pd

# Load data into pandas DataFrames
courses_df = pd.read_csv('courses.csv')
users_df = pd.read_csv('users.csv')
enrollments_df = pd.read_csv('enrollments.csv')
assessments_df = pd.read_csv('assessments.csv')
transactions_df = pd.read_csv('transactions.csv')
# Merge enrollments with courses and users information
enrollments_data = pd.merge(enrollments_df, courses_df, on='course_id')
enrollments_data = pd.merge(enrollments_data, users_df, on='user_id')

# Aggregate total enrollments by course category
total_enrollments_by_category = enrollments_data.groupby('category')['enrollment_id'].count()

# Calculate monthly course enrollment trend
enrollments_data['enrollment_date'] = pd.to_datetime(enrollments_data['enrollment_date'])
enrollments_data['month'] = enrollments_data['enrollment_date'].dt.month
monthly_enrollment_trend = enrollments_data.groupby('month')['enrollment_id'].count()
import pyodbc

# Establish connection to SQL Server
conn = pyodbc.connect('DRIVER={SQL Server};SERVER=your_server;DATABASE=your_database;UID=your_username;PWD=your_password')

# Create cursor
cursor = conn.cursor()

# Load DataFrames into SQL tables
courses_df.to_sql('courses', conn, if_exists='replace', index=False)
users_df.to_sql('users', conn, if_exists='replace', index=False)
enrollments_df.to_sql('enrollments', conn, if_exists='replace', index=False)
assessments_df.to_sql('assessments', conn, if_exists='replace', index=False)
transactions_df.to_sql('transactions', conn, if_exists='replace', index=False)
# Query to get total enrollments by course category
total_enrollments_by_category_query = """
SELECT category, COUNT(enrollment_id) AS total_enrollments
FROM enrollments
GROUP BY category
"""

# Execute the query and fetch results
total_enrollments_by_category_result = pd.read_sql(total_enrollments_by_category_query, conn)

# Similarly, write and execute other OLAP queries
# Analyze monthly course enrollment trend
# Plot monthly_enrollment_trend using matplotlib or seaborn

# Analyze total revenue generated by each instructor
total_revenue_by_instructor = transactions_df.groupby('instructor_id')['amount'].sum()

# Continue analyzing other insights based on OLAP queries
